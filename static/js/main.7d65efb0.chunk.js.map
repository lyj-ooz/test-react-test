{"version":3,"sources":["data.js","components/Stock.js","components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["data","id","title","content","price","Stock","props","console","log","stock","TestBox","styled","div","TestTitle","h4","color","Detail","useState","showAlert","setShowAlert","useEffect","timer","setTimeout","clearTimeout","setInput","useParams","history","useHistory","shoesData","shoes","find","product","parseInt","className","onChange","e","target","value","src","width","onClick","arr","setStock","goBack","Product","App","Data","setShoesData","loading","setLoading","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","Form","inline","FormControl","type","placeholder","Button","variant","exact","path","Jumbotron","map","i","name","axios","get","then","result","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d65efb0.chunk.js","sourcesContent":["const data = [\n  {\n    id: 2,\n    title: \"Grey Yordan\",\n    content: \"Born in the States\",\n    price: 130000,\n  },\n  {\n    id: 0,\n    title: \"White and Black\",\n    content: \"Born in France\",\n    price: 120000,\n  },\n\n  {\n    id: 1,\n    title: \"Red Knit\",\n    content: \"Born in Seoul\",\n    price: 110000,\n  },\n];\n\nexport default data;\n","import React from \"react\";\n\nexport default function Stock(props) {\n  console.log(props.stock);\n  return <p>재고: {props.stock[0]}</p>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n// CSSinJS\n// 컴포넌트를 만들 때, CSS를 미리 입혀놓은 컴포넌트를 만든다.\nimport styled from \"styled-components\";\nimport \"./Detail.scss\";\nimport Stock from \"./Stock\";\n\nconst TestBox = styled.div`\n  padding: 20px;\n`;\n\nconst TestTitle = styled.h4`\n  font-size: 30px;\n  color: ${(props) => props.color};\n`;\n\n// 컴포넌트의 Lifecycle\n// : 컴포넌트는 등장 -> 업데이트 -> 퇴장\n// : 이 단계 중간 중간에 hook을 걸어서 작업을 요청할 수 있다.\n// 원래는 class형 컴포넌트만 사용할 수 있었다.. componentDidMount등..\n// 함수형에서 이것들을 통합해서 사용할 수 있는 useEffect!\n//    useEffect: 컴포넌트가 mount된 후, 혹은 update된 후 특정 코드 실행.\n//     + 컴포넌트가 사라지면서 실행할 코드는? return 안에 작성하면 된다.\n//    useEffect()를 여러 개 써도 된다. 적힌 순서대로 실행됨.\n\nexport default function Detail(props) {\n  const [showAlert, setShowAlert] = useState(true);\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // setTimeout 사용 후에는 clear 해주자 꼭.\n      setShowAlert(false);\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showAlert]); //showAlert가 변경될때만 실행하는 useEffect\n  //이 조건이 없으면 다른게 업데이트 될 때마다 useEffect도 계속 실행됨\n  //조건에 빈 [] 이렇게 하면 페이지 처음에 딱 한 번 실행하고 끝, 페이지가 아무리 업데이트 되어도 실행되지 않음.\n\n  const [input, setInput] = useState(\"\");\n\n  // useParams(): 사용자가 입력한 url의 모든 파라미터들이 오브젝트로 담겨있음\n  let { id } = useParams();\n  let history = useHistory();\n  // let shoesData;\n\n  // for (let i = 0; i < props.shoes.length; i++) {\n  //   if (props.shoes[i].id === parseInt(id)) {\n  //     shoesData = props.shoes[i];\n  //   }\n  // }\n\n  let shoesData = props.shoes.find((product) => {\n    // return product.id == id;\n    return product.id === parseInt(id);\n  });\n\n  return (\n    <div className=\"container\">\n      <TestBox>\n        <TestTitle color={\"#e0e0e0\"}>박스다!</TestTitle>\n        <TestTitle color={\"#1422a9\"}>박스다!</TestTitle>\n        <TestTitle color=\"#cc00af\" className=\"third-title\">\n          박스다!\n        </TestTitle>\n      </TestBox>\n\n      <input\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n      />\n\n      {showAlert && (\n        <div className=\"stock-alert-green\">\n          <p>품절 임박!!!!!!!!!</p>\n        </div>\n      )}\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\n            width=\"100%\"\n          />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          {/* <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\n          <p>{props.shoes[id].content}</p>\n          <p>{props.shoes[id].price} 원</p> */}\n          <h4 className=\"pt-5\">{shoesData.title}</h4>\n          <p>{shoesData.content}</p>\n          <p>{shoesData.price} 원</p>\n\n          <Stock stock={props.stock}></Stock>\n\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              let arr = [...props.stock];\n              arr[0] -= 1;\n              props.setStock(arr);\n            }}\n          >\n            주문하기\n          </button>\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            뒤로가기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Button,\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  NavDropdown,\n  Jumbotron,\n  Container,\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data.js\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Detail from \"./components/Detail\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [shoesData, setShoesData] = useState(Data);\n  const [loading, setLoading] = useState(false);\n  const [stock, setStock] = useState([10, 20, 30]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"sm\">\n        <Navbar.Brand href=\"#home\">CREAM</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            {/* Nav.Link 안에 <Link>가 중첩되면 경고 메시지가 뜨는데, 위처럼 바꾸면 된다.  */}\n            <Nav.Link>\n              <Link to=\"/detail\">Detail</Link>\n            </Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* exact: 경로가 정확히 일치할때만 해당 페이지를 보여줌 */}\n          <Jumbotron className=\"set-background-img\">\n            <h1>Hello, world!</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoesData.map((shoes, i) => {\n                return (\n                  <Product\n                    id={shoes.id}\n                    name={shoes.title}\n                    content={shoes.content}\n                    price={shoes.price}\n                  />\n                );\n              })}\n            </div>\n            {loading && <div>로딩중이여.....</div>}\n\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                //데이터 가져오는거 성공/실패 전에 '로딩..'보였다가\n                //성공/실패가 되면 '로딩...' 안 보이게 하기\n                setLoading(true);\n\n                //'더보기' 버튼을 누르면 axios로 json 데이터를 가져와서\n                // 기존의 shoesData에 추가해주면 아이템을 더 그려낸다.\n                // axios는 json을 object로 알아서 바꿔줌\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    setLoading(false);\n\n                    // let datacopy = [...shoesData];\n                    // result.data.forEach((d) => {\n                    //   datacopy.push(d);\n                    // });\n                    // setShoesData(datacopy);\n\n                    setShoesData([...shoesData, ...result.data]);\n                  })\n                  .catch(() => {\n                    setLoading(false);\n                    console.log(\"에구...\");\n                  });\n              }}\n            >\n              상품 더보기\n            </button>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          {/* url 파라미터, : 뒤에 아무거나 적으면 된다 */}\n          <Detail shoes={shoesData} stock={stock} setStock={setStock} />\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때,,,</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Product(props) {\n  return (\n    <div className=\"col-md-4\">\n      <img\n        src={`https://codingapple1.github.io/shop/shoes${props.id + 1}.jpg`}\n        width=\"100%\"\n      />\n      <h4>{props.title}</h4>\n      <p>\n        <div>{props.content}</div>\n        <div>{props.price}</div>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\n// BrowserRouter vs HashRouter\n// BrowserRouter: 라우팅을 요청할 때 자칫하면 리액트가 아닌 서버에게 요청할 수 있음\n//                (서버 - \"그런 페이지 없는디..?\")\n//                라우팅을 리액트가 담당하도록 서버에 몇 가지 설정을 해야함..\n// HashRouter: 라우팅을 확실하게 리액트에게 요청함. (주소 뒤에 해쉬 #가 붙음)\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}